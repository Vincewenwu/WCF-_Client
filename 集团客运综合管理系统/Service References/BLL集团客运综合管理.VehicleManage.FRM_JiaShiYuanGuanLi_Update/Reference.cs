//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace 集团客运综合管理系统.BLL集团客运综合管理.VehicleManage.FRM_JiaShiYuanGuanLi_Update {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BLL集团客运综合管理.VehicleManage.FRM_JiaShiYuanGuanLi_Update.FRM_JiaShiYuanGuanLi_Update" +
        "")]
    public interface FRM_JiaShiYuanGuanLi_Update {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectQuasiDrivingType", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectQuasiDrivingTypeResponse")]
        System.Data.DataSet SelectQuasiDrivingType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectQuasiDrivingType", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectQuasiDrivingTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectQuasiDrivingTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectOrganization", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectOrganizationResponse")]
        System.Data.DataSet SelectOrganization();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectOrganization", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectOrganizationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectOrganizationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectJiaShiYuanXinXiByDriverID", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectJiaShiYuanXinXiByDriverIDRes" +
            "ponse")]
        System.Data.DataSet SelectJiaShiYuanXinXiByDriverID(int DriverID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectJiaShiYuanXinXiByDriverID", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectJiaShiYuanXinXiByDriverIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectJiaShiYuanXinXiByDriverIDAsync(int DriverID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectJiaShiYuanTuPian", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectJiaShiYuanTuPianResponse")]
        byte[] SelectJiaShiYuanTuPian(int DriverID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectJiaShiYuanTuPian", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/SelectJiaShiYuanTuPianResponse")]
        System.Threading.Tasks.Task<byte[]> SelectJiaShiYuanTuPianAsync(int DriverID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/UpdateDriverXinXi", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/UpdateDriverXinXiResponse")]
        int UpdateDriverXinXi(
                    int QuasiDrivingTypeID, 
                    int OrganizationID, 
                    string ContactPhone, 
                    int DriveAge, 
                    string DrivingLicenseNo, 
                    string DriverNumber, 
                    string Certificate, 
                    System.DateTime DrivingLicence, 
                    System.DateTime licensePeriod, 
                    string DriverVehicleNumber, 
                    System.DateTime CertificateLicence, 
                    string Comment, 
                    byte[] Photo, 
                    int DriverID, 
                    string DriverMC, 
                    string Sex, 
                    string Identification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/UpdateDriverXinXi", ReplyAction="http://tempuri.org/FRM_JiaShiYuanGuanLi_Update/UpdateDriverXinXiResponse")]
        System.Threading.Tasks.Task<int> UpdateDriverXinXiAsync(
                    int QuasiDrivingTypeID, 
                    int OrganizationID, 
                    string ContactPhone, 
                    int DriveAge, 
                    string DrivingLicenseNo, 
                    string DriverNumber, 
                    string Certificate, 
                    System.DateTime DrivingLicence, 
                    System.DateTime licensePeriod, 
                    string DriverVehicleNumber, 
                    System.DateTime CertificateLicence, 
                    string Comment, 
                    byte[] Photo, 
                    int DriverID, 
                    string DriverMC, 
                    string Sex, 
                    string Identification);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FRM_JiaShiYuanGuanLi_UpdateChannel : 集团客运综合管理系统.BLL集团客运综合管理.VehicleManage.FRM_JiaShiYuanGuanLi_Update.FRM_JiaShiYuanGuanLi_Update, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FRM_JiaShiYuanGuanLi_UpdateClient : System.ServiceModel.ClientBase<集团客运综合管理系统.BLL集团客运综合管理.VehicleManage.FRM_JiaShiYuanGuanLi_Update.FRM_JiaShiYuanGuanLi_Update>, 集团客运综合管理系统.BLL集团客运综合管理.VehicleManage.FRM_JiaShiYuanGuanLi_Update.FRM_JiaShiYuanGuanLi_Update {
        
        public FRM_JiaShiYuanGuanLi_UpdateClient() {
        }
        
        public FRM_JiaShiYuanGuanLi_UpdateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FRM_JiaShiYuanGuanLi_UpdateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FRM_JiaShiYuanGuanLi_UpdateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FRM_JiaShiYuanGuanLi_UpdateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet SelectQuasiDrivingType() {
            return base.Channel.SelectQuasiDrivingType();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectQuasiDrivingTypeAsync() {
            return base.Channel.SelectQuasiDrivingTypeAsync();
        }
        
        public System.Data.DataSet SelectOrganization() {
            return base.Channel.SelectOrganization();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectOrganizationAsync() {
            return base.Channel.SelectOrganizationAsync();
        }
        
        public System.Data.DataSet SelectJiaShiYuanXinXiByDriverID(int DriverID) {
            return base.Channel.SelectJiaShiYuanXinXiByDriverID(DriverID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectJiaShiYuanXinXiByDriverIDAsync(int DriverID) {
            return base.Channel.SelectJiaShiYuanXinXiByDriverIDAsync(DriverID);
        }
        
        public byte[] SelectJiaShiYuanTuPian(int DriverID) {
            return base.Channel.SelectJiaShiYuanTuPian(DriverID);
        }
        
        public System.Threading.Tasks.Task<byte[]> SelectJiaShiYuanTuPianAsync(int DriverID) {
            return base.Channel.SelectJiaShiYuanTuPianAsync(DriverID);
        }
        
        public int UpdateDriverXinXi(
                    int QuasiDrivingTypeID, 
                    int OrganizationID, 
                    string ContactPhone, 
                    int DriveAge, 
                    string DrivingLicenseNo, 
                    string DriverNumber, 
                    string Certificate, 
                    System.DateTime DrivingLicence, 
                    System.DateTime licensePeriod, 
                    string DriverVehicleNumber, 
                    System.DateTime CertificateLicence, 
                    string Comment, 
                    byte[] Photo, 
                    int DriverID, 
                    string DriverMC, 
                    string Sex, 
                    string Identification) {
            return base.Channel.UpdateDriverXinXi(QuasiDrivingTypeID, OrganizationID, ContactPhone, DriveAge, DrivingLicenseNo, DriverNumber, Certificate, DrivingLicence, licensePeriod, DriverVehicleNumber, CertificateLicence, Comment, Photo, DriverID, DriverMC, Sex, Identification);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDriverXinXiAsync(
                    int QuasiDrivingTypeID, 
                    int OrganizationID, 
                    string ContactPhone, 
                    int DriveAge, 
                    string DrivingLicenseNo, 
                    string DriverNumber, 
                    string Certificate, 
                    System.DateTime DrivingLicence, 
                    System.DateTime licensePeriod, 
                    string DriverVehicleNumber, 
                    System.DateTime CertificateLicence, 
                    string Comment, 
                    byte[] Photo, 
                    int DriverID, 
                    string DriverMC, 
                    string Sex, 
                    string Identification) {
            return base.Channel.UpdateDriverXinXiAsync(QuasiDrivingTypeID, OrganizationID, ContactPhone, DriveAge, DrivingLicenseNo, DriverNumber, Certificate, DrivingLicence, licensePeriod, DriverVehicleNumber, CertificateLicence, Comment, Photo, DriverID, DriverMC, Sex, Identification);
        }
    }
}
